import React, { useState } from "react";
import SearchInput from "../Components/search/SearchInput";
import NetworkGraph from "../Components/visualization/NetworkGraph";
import SubredditCard from "../Components/results/SubredditCard";
import { AlertCircle, Sparkles, Compass, Loader2 } from "lucide-react";

export default function SubredditFinder() {
  const [query, setQuery] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [result, setResult] = useState(null);

  const handleSearch = async (value) => {
    if (!value) return;
    setQuery(value);
    setLoading(true);
    setError(null);
    setResult(null);

    try {
      // Simulate API call (replace with your backend if available)
      await new Promise((resolve) => setTimeout(resolve, 1200));

      // Mock data for demo
      const mockData = {
        name: value.toLowerCase(),
        display_name: `r/${value}`,
        subscribers: Math.floor(Math.random() * 1000000),
        description: `This is a mock description for subreddit r/${value}.`,
        related_subreddits: [
          { name: "javascript", subscribers: 2000000, similarity_score: 0.8 },
          { name: "reactjs", subscribers: 1500000, similarity_score: 0.7 },
          { name: "webdev", subscribers: 1200000, similarity_score: 0.6 },
        ],
      };

      setResult(mockData);
    } catch (err) {
      setError("Failed to fetch subreddit data.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="max-w-5xl mx-auto px-4 py-8 space-y-8">
      {/* Header */}
      <div className="text-center space-y-2">
        <h1 className="text-3xl font-bold text-[var(--dark-navy)]">
          <Sparkles className="inline w-6 h-6 text-[var(--brand-orange)] mr-2" />
          Subreddit Finder
        </h1>
        <p className="text-gray-600">
          <Compass className="inline w-4 h-4 mr-1" />
          Discover related communities on Reddit
        </p>
      </div>

      {/* Search */}
      <SearchInput onSearch={handleSearch} />

      {/* Loading */}
      {loading && (
        <div className="flex items-center justify-center py-10 text-gray-500">
          <Loader2 className="w-6 h-6 mr-2 animate-spin" />
          Fetching results...
        </div>
      )}

      {/* Error */}
      {error && (
        <div className="flex items-center justify-center gap-2 text-red-600 bg-red-50 border border-red-200 rounded-lg p-3">
          <AlertCircle className="w-5 h-5" />
          <span>{error}</span>
        </div>
      )}

      {/* Results */}
      {result && (
        <div className="space-y-6">
          {/* Subreddit summary card */}
          <SubredditCard subreddit={result} />

          {/* Visualization */}
          <NetworkGraph
            subredditData={result}
            onNodeClick={(id) => handleSearch(id)}
          />
        </div>
      )}
    </div>
  );
}
